层次化（纵向），模块化（横向）设计！

设计之道：抽象通用与不变的部分，封装变化的部分。
		 样例1：模板方法模式，将处理流程（不变部分）固化为程序的执行骨架，将各部分的具体实现（变化部分）。---类级别
		 样例2：回调方法模式，将与资源管理等细节无关的处理（变化部分）以回调接口的方式传入，将资源管理的细节（不变部分）封装在方法内部。---方法级别
		 注：回调方法在Spring中从始至终被处处用到，回调方法被用来隐藏复杂的资源管理细节，这些资源即使在发生错误的时候也必须被关闭。
--------------------------------------------------------------------------------------------------------------------------------------------
问：应用程序与应用服务器之间的关系？
答：应用服务器又称为中间件，是位于操作系统和应用程序之间的通用服务。
          它的主要作用是用来屏蔽网络硬件平台的差异性和操作系统与网络协议的异构性， 使应用程序能够比较平滑地运行于不同平台上；
          并且为应用程序提供运行环境以及必需的服务与资源。
          
	应用程序运行在应用服务器环境中，主要处理自身关注的业务逻辑。由应用服务器为其提供运行环境，以及必需的服务与资源来完成业务操作。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
问：JavaEE世界中，哪些属于Java应用程序的所需的服务与资源？
答：以任何形式存在的网络连接，例如：数据库连接，JMS连接，RPC调用的网络连接。
	线程调度，负载均衡，HttpSession管理，安全验证等通用服务。