层次化（纵向），模块化（横向）设计！

设计之道：抽象通用与不变的部分，封装变化的部分。
		 样例1：模板方法模式，将处理流程（不变部分）固化为程序的执行骨架，将各部分的具体实现（变化部分）。---类级别
		 样例2：回调方法模式，将与资源管理等细节无关的处理（变化部分）以回调接口的方式传入，将资源管理的细节（不变部分）封装在方法内部。---方法级别
		 注：回调方法在Spring中从始至终被处处用到，回调方法被用来隐藏复杂的资源管理细节，这些资源即使在发生错误的时候也必须被关闭。