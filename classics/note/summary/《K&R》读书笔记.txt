《K&R》读书笔记
-------------------------------------------------------------------------------------------------------------------------
第1章 导言
1.1 入门
C语言程序，都是由函数和变量组成。函数中包含一些语句，指定所要执行的计算操作；变量用来存储计算过程中使用的值。
函数之间进行数据交换的一种方法是调用函数时向被掉用函数提供值（参数）列表。

1.2 变量与算术表达式
在C语言中，所有的变量都必须先声明后使用。声明用于说明变量的属性，由一个类型名和一个变量表组成。
C语言提供了一些基本类型，这些数据类型对象的大小取决于具体的机器。
char 字符-- 一个字节
short 短整型
int 整型
long 长整型
float 浮点型
double 双精度浮点型

C语言本身并没有定义输入/输出功能。

1.3 for语句
C语言一个通用的规则：在允许使用某种类型变量的任何场合，都可以使用该类型的表达式。

1.4 符号常量
#define 指令可以把符号名（或成为符号常量）定义为一个特定的字符串。
#define 名字 替换文本
注意，#define指令行的末尾没有分号

1.5 字符输入/输出
文本流是由多行字符构成的字符序列，而每行字符则由0个或者多个字符组成，行末是一个换行符。
字符在键盘、屏幕或者其他地方无论以什么形式表现，它在机器内部都是以位模式存储的。
输入结束符，EOF（end of file，文件结束）定义在头文件<stdio.h>中，是个整型数，其具体数值是什么并不重要，只要它与任何char类型的值都不相同即可。
在C语言中，赋值操作是一个表达式，并且具有一个值，即赋值后左边变量保存的值。
自增与自减的操作：n++与++n的区别？
n++ :temp=n,n=n+1,return tmp;
++n :n=n+1,tmp=n,return n;
其表达式返回值只是变量的值副本。

在兼有值与赋值两种功能的表达式中，赋值结合次序是由又至左的。
n1 = n2 = n3 =0，其实是 (n1=(n2=(n3=0)))。

1.6 数组

1.7 函数
函数定义可以以任意次序出现在一个源文件或者多个源文件中，但同一个函数不能分割存放在多个文件中。
函数的声明称为函数原型，如果函数的定义、用法与函数原型不一致，将出现错误，函数原型中的参数名是可选的。

在调用函数之前，应该存在函数的声明！

1.8 参数--传值调用
在C语言中，所有函数参数都是“通过值”传递的。也就是说，传递给被调用函数的参数值存放在临时便令中，而不是存放在原来的变量中。
在C语言中，被调用函数不能直接修改主调函数中变量的值，而只能修改其私有的临时副本的值。
必要时，也可以让函数能够修改主调函数中的变量。此时参数传递为变量的地址，指针变量。

然后是数组参数，情况就有所不同。当把数组名用作参数时，传递给函数的值是数组起始元素的位置或地址--它并不复制数组元素本身。

1.9 字符数组
C语言中出现"hello\n"的字符串常量时，它将以字符数组的形式存储，数组的各元素分别存储字符串的各个字符，并以'\0'标识字符串的结束。
-------------------------------
| h | e | l | l | o | \n | \0 |  
-------------------------------
printf函数中的格式规范%s规定，对应的参数必须是以这种形式表示的字符串。

1.10 外部变量与作用域
函数中的每个局部变量只能在函数被调用时存在，在函数执行完毕退出时消失。函数内变量称为“自动变量”或者“局部变量”。

外部变量，所有函数中都可以通过变量名访问这种类型的变量。
外部变量在程序执行期间一直存在，不随函数执行完毕时消失。
外部变量必须定义在所有函数之外，并且只能定义一次，定义后编译器将它分配存储单元。

函数访问外部变量时，必须声明相应的外部变量，此时说明其类型。声明时可以使用extern语句显示声明，也可以通过上下文隐式声明。

函数在使用外部变量之前，必须要知道外部变量的名字。到达到该目的，有以下两种方式。
方式一：
在函数中使用extern类型的声明，这种类型的声明除了在前面加一个关键字extern外，其他方面与普通变量的声明相同。

方式二：
在源文件中，如果外部变量的定义出现在使用它的函数之前，那么在那个函数中就没有必要使用extern声明。

通常的做法中，所有外部变量的定义都放在源文件的开始处，这样就可以省略extern声明了。

如果变量定义在其他的文件中，则使用该变量的文件必须使用extern声明来建立该变量与其定义之间的联系。
人们通常把变量和函数的extern声明放在一个单独的文件中，习惯上称为头文件。并在每个源文件中使用#inculde语句包含进来。

外部变量的定义（define）与声明（declaration）：
“定义”表示创建变量并为其分配存储单元，而“声明”指的是说明变量的性质，但并不分配储存单元。

